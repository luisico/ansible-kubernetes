---
- name: Create directory for kubernetes root's config
  file:
    path: ~/.kube
    state: directory
    mode: 0750

- name: Add kubernetes repository
  yum_repository:
    name: kubernetes
    description: Kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey:
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    exclude: kubelet kubeadm kubectl

- name: Install kubernetes tools {{ kubernetes_version }}
  yum:
    name: '{{ kubernetes_packages }}'
    disable_excludes: kubernetes
    state: '{{ kubernetes_packages_state }}'
    allow_downgrade: yes
  register: kubernetes__r_install

# Latest cri-tools version provided by the kubernetes repo is 1.13
# This task will install crictl in /usr/local/bin
- name: Find installed crictl version
  command: crictl --version
  register: kubernetes__r_crictl_version
  check_mode: no
  changed_when: no
  environment:
    PATH: '/usr/local/bin:{{ ansible_env.PATH }}'

- name: Install crictl for kubernetes {{ kubernetes_version }}
  unarchive:
    remote_src: yes
    src: 'https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ kubernetes_crictl_version }}/crictl-{{ kubernetes_crictl_version }}-linux-amd64.tar.gz'
    dest: /usr/local/bin
    mode: 0755
    owner: root
    group: root
  register: kubernetes__r_crictl_install
  when: kubernetes__r_crictl_version.stdout.split()[2] != kubernetes_crictl_version

- name: Install completion scripts
  import_tasks: completion.yml

- name: Find kubernetes installed version
  command: kubeadm version -o short
  register: kubernetes__r_installed_version
  check_mode: no
  changed_when: no

- name: Enable kubelet service
  # Note: kubelet will fail until /var/lib/kubelet/config.yaml is put in place by kubeadm init/join
  systemd:
    name: kubelet
    state: started
    enabled: true

- name: Setup load balancer for apiservers as kubelet manifests
  include_tasks: load-balancer.yml
  when: kubernetes_role == 'manager'

- name: Bootstrap kubernetes with kubeadm
  import_tasks: kubeadm.yml
